name: Re-Usable Server CI Work Flow

on:
  workflow_call:
    inputs:
      service-name:
        required: true
        type: string
    secrets:
      SSH_USER:
        required: true
      SSH_PRIVATE_KEY:
        required: true
      SSH_HOST:
        required: true

jobs:
  server-build-deploy:
    runs-on: ubuntu-latest

    env:
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
      RUSTV: stable
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: /home/runner/.cache/sccache

    steps:
      - uses: actions/checkout@v2

      - name: Install sccache (ubuntu-latest)
        env:
          LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: 0.2.13
        run: |
          SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ubuntu-latest-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ubuntu-latest-cargo-${{inputs.service-name}}-

      - name: Save sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: /home/runner/.cache/sccache
          key: ubuntu-latest-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ubuntu-latest-sccache-${{inputs.service-name}}-

      - name: Start sccache server
        run: sccache --start-server

      - name: Format
        run: cargo fmt -- --check

      - name: Run Tests
        run: cargo test --all

      - name: Build Server
        run: cd server && cargo build --release

      - name: Print sccache stats
        run: sccache --show-stats

      - name: Stop sccache server
        run: sccache --stop-server || true

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/github_action.key
          chmod 600 ~/.ssh/github_action.key
          cat >>~/.ssh/config <<END
          Host smokey_olive
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/github_action.key
            StrictHostKeyChecking no
          END

      - name: Send Binaries
        run: |
          cp ./target/release/server ./${{inputs.service-name}}-server
          scp ./${{inputs.service-name}}-server smokey_olive:/home/darren/tmp

      - name: Stop and Swap Binaries
        run: |
          ssh smokey_olive 'systemctl --user stop ${{inputs.service-name}}.service
          mv /home/darren/tmp/${{inputs.service-name}}-server /home/darren/${{inputs.service-name}}/${{inputs.service-name}}-server'

      - name: Restart Service
        if: ${{ always() }}
        run: ssh smokey_olive 'systemctl --user restart ${{inputs.service-name}}.service'
